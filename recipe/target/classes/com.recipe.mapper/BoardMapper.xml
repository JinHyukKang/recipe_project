<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.recipe.mapper.BoardMapper">

<!-- 레시피 글작성 -->
<insert id="boardWrite">
  INSERT INTO recipe (recipe_title, recipe_content, user_nickname, recipe_realname, recipe_filename, file_path, user_num) 
  VALUES (#{recipe_title},
  		  #{recipe_content},
  		  #{user_nickname},
  		  #{recipe_realname},
  		  #{recipe_filename},
  		  #{file_path},
  		  #{user_num}
  		  )
</insert>

<!-- 게시판 글 정보 모아오기(최신순) -->
<select id="findWriteAll" resultType="com.recipe.model.BoardVO">
	SELECT * FROM recipe
	ORDER BY insert_date DESC
</select>

<!-- 게시판 글 정보 모아오기(추천수순) -->
<select id="findWriteAllGood" resultType="com.recipe.model.BoardVO">
	SELECT * FROM recipe 
	ORDER BY good_count DESC
</select>

<!-- 게시판 글 정보 모아오기(조회수순) -->
<select id="findWriteAllView" resultType="com.recipe.model.BoardVO">
	SELECT * FROM recipe 
	ORDER BY view_count DESC
</select>

<!-- recipe_num을 받아 해당 게시판 글 데이터 불러오기 -->
<select id="viewWrite" resultType="com.recipe.model.BoardVO">
	SELECT * FROM recipe 
	WHERE recipe_num = #{recipe_num}
</select>

<!-- 조회수 증가 -->
<update id="viewUpdate">
 UPDATE recipe
 SET
     view_count = view_count + 1
 WHERE
     recipe_num = #{recipe_num}
 </update>

<!-- 조회수 감소 -->
<update id="viewBack">
 UPDATE recipe
 SET
     view_count = view_count - 1
 WHERE
     recipe_num = #{recipe_num}
 </update>

<!-- 추천수 증가 -->
<update id="goodUpdate">
 UPDATE recipe
 SET
     good_count = good_count + 1
 WHERE
     recipe_num = #{recipe_num}
</update>

<!-- 추천수 감소 -->
<update id="goodBack">
 UPDATE recipe
 SET
     good_count = good_count - 1
 WHERE
     recipe_num = #{recipe_num}
</update>

<!-- 추천 데이터 추가 -->
<select id="goodInsert">
INSERT INTO good (recipe_num, user_num, user_nickname)
VALUES (
	#{recipe_num},
	#{user_num},
	#{user_nickname}
	)

</select>

<!-- 추천 정보 가져오기 -->
<select id="goodGet" resultType="com.recipe.model.GoodVO">
SELECT * 
FROM good
WHERE recipe_num = #{recipe_num} AND user_num = #{user_num}
</select>

<!-- 추천 데이터 삭제 -->
<select id ="goodDelete">
DELETE
FROM good
WHERE recipe_num = #{recipe_num} AND user_num = #{user_num}

</select>

<!-- 댓글수 증가 -->
<update id="commentUpdate">
 UPDATE recipe
 SET
     comment_count = comment_count + 1
 WHERE
     recipe_num = #{recipe_num}
</update>

<!-- 댓글수 증가 -->
<update id="commentBack">
 UPDATE recipe
 SET
     comment_count = comment_count - 1
 WHERE
     recipe_num = #{recipe_num}
</update>

<!-- 다음글 정보 가져오기(최신순) -->
<select id="nextPageDate" resultType="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num =(SELECT nextDate
	FROM (
	SELECT *,
	LEAD(recipe_num) OVER (ORDER BY insert_date DESC) AS nextDate
	FROM recipe
	) AS subquery
	WHERE recipe_num = #{recipe_num}
	);						
</select>

<!-- 다음글 정보 가져오기(추천순) -->
<select id="nextPageGood" resultType="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num =(SELECT nextGood
	FROM (
	SELECT *,
	LEAD(recipe_num) OVER (ORDER BY good_count DESC) AS nextGood
	FROM recipe
	) AS subquery
	WHERE recipe_num = #{recipe_num}
	);
</select>

<!-- 다음글 정보 가져오기(조회순) -->
<select id="nextPageView" resultType="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num =(SELECT nextView
	FROM (
	SELECT *,
	LEAD(recipe_num) OVER (ORDER BY view_count DESC) AS nextView
	FROM recipe
	) AS subquery
	WHERE recipe_num = #{recipe_num}
	);
</select>

<!-- 이전글 정보 가져오기(최신순) -->
<select id="prevPageDate" resultType="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num =(SELECT prevDate
	FROM (
	SELECT *,
	LAG(recipe_num) OVER (ORDER BY insert_date DESC) AS prevDate
	FROM recipe
	) AS subquery
	WHERE recipe_num = #{recipe_num}
	);
</select>

<!-- 이전글 정보 가져오기(추천순) -->
<select id="prevPageGood" resultType="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num =(SELECT prevGood
	FROM (
	SELECT *,
	LAG(recipe_num) OVER (ORDER BY good_count DESC) AS prevGood
	FROM recipe
	) AS subquery
	WHERE recipe_num = #{recipe_num}
	);
</select>

<!-- 이전글 정보 가져오기(조회순) -->
<select id="prevPageView" resultType="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num =(SELECT prevView
	FROM (
	SELECT *,
	LAG(recipe_num) OVER (ORDER BY view_count DESC) AS prevView
	FROM recipe
	) AS subquery
	WHERE recipe_num = #{recipe_num}
	);
</select>

<!-- 게시물 검색 -->
<select id="searchWrite" resultType ="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_title LIKE CONCAT('%', #{keyword}, '%')

</select>

<!-- 마이페이지 내게시물 상세 검색 -->
<select id="mypageView" resultType ="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num = #{recipe_num}
		AND user_num = #{user_num}
</select>

<!-- 마이페이지 내 게시물 상세 검색 (다음글 데이터 가져오기) -->
<select id="mypageNext" resultType ="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num =(SELECT nextDate
	FROM (
	SELECT *,
	LEAD(recipe_num) OVER (ORDER BY insert_date DESC) AS nextDate
	FROM recipe
	WHERE user_num = #{user_num}
	) AS subquery
	WHERE recipe_num = #{recipe_num}
	);		

</select>

<!-- 마이페이지 내 게시물 상세 검색 (이전글 데이터 가져오기) -->
<select id="mypagePrev" resultType ="com.recipe.model.BoardVO">
	SELECT *
	FROM recipe
	WHERE recipe_num =(SELECT prevDate
	FROM (
	SELECT *,
	LAG(recipe_num) OVER (ORDER BY insert_date DESC) AS prevDate
	FROM recipe
	WHERE user_num = #{user_num}
	) AS subquery
	WHERE recipe_num = #{recipe_num}
	);		

</select>

<!-- 게시물 전체 개수 불러오기 -->
<select id="countWrite" resultType="int">
	SELECT COUNT(*)
	FROM recipe
</select>


<!-- user가 작성한 게시글 개수 불러오기 -->
<select id="countWriteUser" resultType="int">
	SELECT COUNT(*)
	FROM recipe
	WHERE user_num = #{user_num}
</select>

<!-- 게시글 삭제 -->
<select id="DeleteRecipe">
	DELETE
	FROM recipe
	WHERE recipe_num = #{recipe_num}

</select>

<!-- 마이페이지 게시글 수정(이미지 수정 포함) -->
<update id="recipeUpdateImg">
UPDATE recipe
SET
	recipe_title = #{recipe_title},
	recipe_filename = #{recipe_filename},
	recipe_realname = #{recipe_realname},
	file_path = #{file_path},
	recipe_content = #{recipe_content}
WHERE 
	recipe_num = #{recipe_num} AND user_num = #{user_num}

</update>

<!-- 마이페이지 게시글 수정(이미지 수정 미포함) -->
<update id="recipeUpdate">
UPDATE recipe
SET
	recipe_title = #{recipe_title},
	recipe_content = #{recipe_content}
WHERE 
	recipe_num = #{recipe_num} AND user_num = #{user_num}

</update>




</mapper>